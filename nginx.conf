user nginx;
daemon off;
worker_processes 4;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  keepalive_timeout 65;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] [$server_name] '
                  '"$request" $status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log info;

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: https://github.com/docker/docker/issues/1486
  chunked_transfer_encoding on;

  # Remove as much server info as possible without recompiling
  server_tokens off;

  # This is required for the ip based filtering (otherwise all requests
  # appear to come from a 10.x ELB)
  real_ip_recursive on;
  real_ip_header X-Forwarded-For;
  set_real_ip_from 10.0.0.0/8;
  proxy_set_header X-Real-IP $remote_addr; # pass on real client's IP
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Add to x-forward-for
  proxy_read_timeout 900;
  proxy_buffering off;

  upstream docker-registry {
    server localhost:5000;
  }

  map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    'registry/2.0' '';
    default registry/2.0;
  }

  server {
    listen 80;
    listen 81;
    server_name registry2.resin.io;

    location /v2/_catalog {
      deny all;
    }

    location /v2/ {
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }

      # See https://github.com/docker/distribution/issues/460
      add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

      proxy_set_header Host $http_host; # required for docker client's sake
      proxy_pass http://docker-registry;
    }

    location / {
      proxy_set_header Host $http_host; # required for docker client's sake
      proxy_pass http://docker-registry;
    }
  }

  include /etc/nginx/conf.d/*.conf;
}
